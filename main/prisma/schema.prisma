generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// 第三方账号信息表
/// 存储用户通过第三方平台（如微信）登录的账号信息
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  openId            String?
  unionId           String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([openId])
}

/// 用户信息表
/// 存储用户的基本信息
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  phoneNumber   String?
  wechatAvatar  String?
  role          Role      @default(LEARNER)
  bio           String?
  accounts      Account[]
  sessions      Session[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model api_key {
  id         BigInt    @id @default(autoincrement())
  user_id    String?
  key        String
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  status     APIStatus @default(PENDING)
}

model cantonese_categories {
  id             BigInt    @id(map: "categories_pkey") @default(autoincrement())
  name           String?
  nickname       String?
  description    String?
  likes          BigInt?   @default(0)
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamp(6)
  cover          String?
  status         String    @default("RAW")
  link           String?
  tags           Json?
  pinned         Boolean   @default(false)
  editable_level BigInt    @default(0)
  linked_apps    Json      @default("[]")
}

model cantonese_corpus_all {
  id             BigInt   @unique @default(autoincrement())
  data           String
  note           Json?
  category       String?
  created_at     DateTime @default(now()) @db.Timestamptz(6)
  tags           Json?
  editable_level Int      @default(1) @db.SmallInt
  liked_num      BigInt   @default(0)
  unique_id      String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  @@id([id, data])
  @@index([data], map: "cantonese_corpus_all_data_pgroonga_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cantonese_corpus_apps {
  id               BigInt    @id @default(autoincrement())
  name             String?
  description      String?
  authors          Json?
  url              String?
  homepage_url     String?
  github_url       String?
  intro_video      String?
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamp(6)
  likes            BigInt    @default(0)
  icon_img         String?
  type             String    @default("STUDY")
  wechat_micro_app String?
  pinned           Boolean?  @default(false)
  localed          Boolean?  @default(false)
}

model cantonese_corpus_dict_yin {
  id             BigInt    @id(map: "cantonese_corpus_dict_sound_pkey") @default(autoincrement())
  key            String?
  key_others     Json?
  pinyin         Json?
  word           Json?
  chinese_pinyin Json?
  meaning        Json?
  phrases        Json?
  sentences      Json?
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamp(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model cantonese_corpus_update_history {
  id               BigInt    @id @default(autoincrement())
  unique_id        String    @db.Uuid
  note             Json
  status           Status    @default(PENDING)
  updated_at       DateTime? @default(now()) @db.Timestamp(6)
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  user_id          String
  approver_user_id String?
  last_note        Json
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cantonese_library {
  id          BigInt    @id @default(autoincrement())
  name        String?
  nickname    String?
  description String?
  likes       BigInt?   @default(0)
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)
  cover       String?
  link        String?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model corpus_zyzdv2 {
  id         BigInt    @id @default(autoincrement())
  unique_id  String?   @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
}

enum Role {
  LEARNER
  TAGGER_PARTNER
  TAGGER_OUTSOURCING
  RESEARCHER
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum APIStatus {
  PENDING
  APPROVED
  BANNED
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum Status {
  PENDING
  APPROVED
  BANNED
}
